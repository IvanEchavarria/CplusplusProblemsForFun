 You are given two arrays (without duplicates) nums1 and nums2 where nums1’s elements are subset of nums2. Find all the next greater numbers for nums1's elements in the corresponding places of nums2.

The Next Greater Number of a number x in nums1 is the first greater number to its right in nums2. If it does not exist, output -1 for this number.

Example 1:

Input: nums1 = [4,1,2], nums2 = [1,3,4,2].
Output: [-1,3,-1]
Explanation:
    For number 4 in the first array, you cannot find the next greater number for it in the second array, so output -1.
    For number 1 in the first array, the next greater number for it in the second array is 3.
    For number 2 in the first array, there is no next greater number for it in the second array, so output -1.

Example 2:

Input: nums1 = [2,4], nums2 = [1,2,3,4].
Output: [3,-1]
Explanation:
    For number 2 in the first array, the next greater number for it in the second array is 3.
    For number 4 in the first array, there is no next greater number for it in the second array, so output -1.

Note:

    All elements in nums1 and nums2 are unique.
    The length of both nums1 and nums2 would not exceed 1000.


//////////////////////////////////////////////////////////////////////////////////////////////////////


class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {
        
        map<int, int> nums2hash; //map containing number and index
        
        vector<int> result;
        
        for(int i = 0; i < nums2.size(); i++)
        {
            nums2hash[nums2[i]] = i; 
        }
        
        
        for(int i = 0; i < nums1.size(); i++)
        {
            int index = nums2hash[nums1[i]]; // Get the index where this number is at in nums2            
            
            if(index + 1 < nums2.size()) // if we are within bounds of the list nums2
            {                
               for(int j  = index + 1 ; j < nums2.size(); j++) // check rest of array for first greater
                {
                    if(nums2[j] > nums1[i])
                    {
                         result.push_back(nums2[j]); //if first greater number then push to list
                         break;
                    }
                    else if(j + 1 >= nums2.size())  // if this is the last number before the end of the list then push -1 
                    {
                        result.push_back(-1); // No first greater found
                    }
                }   
            }
            else
            {
                result.push_back(-1); // No first greater found, out of bounds
            }
        }
        
        
        return result;
    }
};